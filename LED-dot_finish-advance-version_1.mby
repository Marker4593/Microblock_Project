{"config.json":"{\"mode\":\"code\",\"github\":null,\"board\":\"openbit\",\"level\":\"Beginner\"}","main.py":"from machine import Pin\r\nfrom time import sleep\r\nfrom neopixel import NeoPixel\r\nimport OLED\r\nimport random\r\nimport _thread\r\n\r\nnp = NeoPixel(Pin(13, Pin.OUT), 25)\r\noled = OLED.SSD1306_I2C(128, 64)\r\n\r\nswone = Pin(15, Pin.IN)\r\nswtwo = Pin(2, Pin.IN)\r\nswa = Pin(5, Pin.IN)\r\nswb = Pin(12, Pin.IN)\r\n\r\n# display.dot(x, y, display.hex2byte('#ff0000'))\r\n# display.dot(2, 2, display.hex2byte('#7FFF00'))\r\n\r\nled_main = 0\r\nled_before = 0\r\ntimer = 60\r\ntimer_mill = 0\r\nfinish_move_time = 0\r\nled_finish = 12\r\nred_color = (30, 0, 0)\r\nblue_color = (0, 30, 30)\r\ngreen_color = (0, 30, 0)\r\nblack_color = (0, 0, 0)\r\nstart_move = False\r\nfinish_move = False\r\nf_m = True\r\nfirst_round = False\r\n\r\ndef led_stop(led_index):\r\n    np[led_index] = black_color\r\n    np.write()\r\n    sleep(0.1)\r\n\r\ndef led_show():\r\n    global led_main, red_color, led_finish, black_color, blue_color, led_before, timer, timer_mill, finish_move_time, finish_move\r\n    if led_main < 0:\r\n        buzzer.tone(2000, 1.5)\r\n        led_main = led_before\r\n    elif led_main > 24:\r\n        buzzer.tone(2000, 1.5)\r\n        led_main = led_before\r\n    np[led_main] = red_color\r\n    np.write()\r\n    if finish_move == False:\r\n        np[led_finish] = green_color\r\n        np.write()\r\n    led_before = led_main\r\n    if start_move == True:\r\n        timer_mill += 1\r\n        if timer_mill == 8:\r\n            timer -= 1\r\n            finish_move_time += 1\r\n            timer_mill = 0\r\n    sleep(0.1)\r\n\r\ndef oled_show():\r\n    global led_main, led_finish, start_move, timer, timer_mill, finish_move\r\n    oled.fill(0)\r\n    oled.text(f\"Led Dot Move\", 0, 0, 1)\r\n    if start_move == False:\r\n        oled.text(f\"postion Ready\", 0, 20, 1)\r\n        oled.text(f\"finish {led_finish}\", 0, 35, 1)\r\n    else:\r\n        oled.text(f\"postion {led_main}\", 0, 20, 1)\r\n        oled.text(f\"finish {led_finish}\", 0, 35, 1)\r\n        oled.text(f\"{timer}\", 90, 20, 1)\r\n    oled.show()\r\n    while timer == 0:\r\n        display.scroll(\"TIME OUT\", color=display.hex2byte('#ff0000'))\r\n        oled.fill(0)\r\n        oled.text(\"GAME OVER\", 29, 32, 1)\r\n        oled.show()\r\n        sleep(3)\r\n        np.fill((0, 0, 0))\r\n        led_stop(led_main)\r\n        led_stop(led_finish)\r\n        led_main = 0\r\n        timer_mill = 0\r\n        led_finish = 12\r\n        timer = 60\r\n        start_move = False\r\n    if finish_move == True:\r\n        oled.text(\"GREEN MOVE\", 28, 50, 1)\r\n        oled.show()\r\n        sleep(1)\r\n        finish_move = False\r\n\r\n\r\ndef led_process(parameter):\r\n    global led_main, red_color, blue_color, start_move, timer, finish_move_time, timer_mill\r\n    if parameter == \"top\":\r\n        led_stop(led_main)\r\n        led_main -= 5\r\n        if led_main < 0:\r\n            led_main += 5\r\n            buzzer.tone(2000, 1)\r\n    elif parameter == \"bottom\":\r\n        led_stop(led_main)\r\n        led_main += 5\r\n        if led_main > 24:\r\n            led_main -= 5\r\n            buzzer.tone(2000, 1)\r\n    elif parameter == \"left\":\r\n        led_stop(led_main)\r\n        if led_main % 5 == 0:\r\n            buzzer.tone(2000, 1)\r\n            return\r\n        else:\r\n            led_main -= 1\r\n    elif parameter == \"left_up\":\r\n        led_stop(led_main)\r\n        if led_main % 5 == 0:\r\n            buzzer.tone(2000, 1.5)\r\n            return\r\n        else:\r\n            led_main -= 6\r\n    elif parameter == \"right_down\":\r\n        led_stop(led_main)\r\n        if led_main % 5 == 4:\r\n            buzzer.tone(2000, 1.5)\r\n            return\r\n        else:\r\n            led_main += 6\r\n    elif parameter == \"right\":\r\n        led_stop(led_main)\r\n        if led_main % 5 == 4:\r\n            buzzer.tone(2000, 1)\r\n            return\r\n        else:\r\n            led_main += 1\r\n    start_move = True\r\n    if parameter == \"finish\":\r\n        buzzer.tone(2000, 2)\r\n        display.scroll(\"FINISH\", color=display.hex2byte('#33ff33'))\r\n        oled.text(\"RESTARTING\", 10, 50, 1)\r\n        oled.show()\r\n        sleep(0.5)\r\n        timer_mill = 0\r\n        np.fill((0, 0, 0))\r\n        led_main = 0\r\n        led_finish = 12\r\n        timer = 60\r\n        finish_move_time = 0\r\n        start_move = False\r\n        first_round = False\r\n    elif parameter == \"special_win\":\r\n        led_stop(led_main)\r\n        red_color = (0, 30, 30)\r\n        led_show()\r\n        sleep(0.1)\r\n        display.scroll(\"SPECIAL_WIN\", color=display.hex2byte('#90d5ff'))\r\n        oled.text(\"SPECIAL MOVE ACTIVATED\", 0, 50, 1)\r\n        oled.show()\r\n        sleep(1)\r\n        timer_mill = 0\r\n        finish_move_time = 0\r\n        np.fill((0, 0, 0))\r\n        led_main = 0\r\n        led_finish = 12\r\n        red_color = (30, 0, 0)\r\n        np.write()\r\n        timer = 60\r\n        start_move = False\r\n        first_round = False\r\n    elif parameter == \"complete\":\r\n        buzzer.tone(2000, 3)\r\n        oled.text(\"RED WIN\", 30, 50, 1)\r\n        oled.show()\r\n        timer_mill = 0\r\n        sleep(1)\r\n        display.scroll(\"RED WIN\", color=display.hex2byte('#ff0000'))\r\n        np.fill((0, 0, 0))\r\n        timer_mill = 0\r\n        timer = 60\r\n        led_main = 0\r\n        led_finish = 12\r\n        finish_move_time = 0\r\n        start_move = False\r\n        first_round = False\r\n\r\ndef finish_move_function():\r\n    global finish_move, finish_move_time, f_m, led_finish, first_round\r\n    while f_m:\r\n        if finish_move_time == 5:\r\n            temporary = random.randint(0, 24)\r\n            if temporary != led_main:\r\n                finish_move = True\r\n                before_finish = led_finish\r\n                led_finish = temporary\r\n                led_stop(before_finish)\r\n                finish_move_time = 0\r\n                \r\n            else:\r\n                finish_move = True\r\n                before_finish = led_finish\r\n                temporary += 1\r\n                led_finish = temporary\r\n                led_stop(before_finish)\r\n                finish_move_time = 0\r\n                print(\"GO in condition 2\")\r\n            finish_move = False\r\n            first_round = True\r\n                \r\n        sleep(0.1)\r\n\r\n_thread.start_new_thread(finish_move_function, ())\r\n    \r\n\r\n\r\ndef main_process():\r\n    global led_main, led_finish, finish_move, first_round\r\n    led_show()\r\n    oled_show()\r\n    print(first_round)\r\n    #-----------------\r\n    sw1 = swone()\r\n    sw2 = swtwo()\r\n    swA = swa()\r\n    swB = swb()\r\n    #-----------------\r\n    if sw1 == 0 and sw2 == 0 and swA == 0:\r\n        led_process(\"special_win\")\r\n    elif swA == 0 and sw1 == 0:\r\n        led_process(\"right_down\")\r\n    elif swB == 0 and sw2 == 0:\r\n        led_process(\"left_up\")\r\n    elif sw1 == 0 and sw2 == 1 and swA == 1:\r\n        led_process(\"right\")\r\n    elif swA == 0 and swB == 1:\r\n        led_process(\"bottom\")\r\n    elif swB == 0 and swA == 1:\r\n        led_process(\"top\")\r\n    elif sw2 == 0 and sw1 == 1:\r\n        led_process(\"left\")\r\n    elif led_main == led_finish and first_round == True:\r\n        led_process(\"finish\")\r\n    elif led_main == led_finish and first_round == False:\r\n        led_process(\"complete\")\r\n        \r\n\r\nwhile True:\r\n    main_process()"}