{"config.json":"{\"mode\":\"code\",\"github\":null,\"board\":\"openbit\",\"level\":\"Beginner\"}","main.py":"from machine import Pin\nfrom time import sleep\nimport OLED\nimport time\nimport random\nimport _thread\n\noled = OLED.SSD1306_I2C(128, 64)\nswone = Pin(15, Pin.IN)\nswtwo = Pin(2, Pin.IN)\nx_start = 50\ny_start = 40\nx_stop = 10\ny_stop = 10\nset_random = set()\nhigh_y = 0\n\nx1,y1 = 0,0\nx1_1,y1_1 =  5, 5\n\nx2,y2 = 0,0\nx2_2,y2_2 = 5, 5\n\nx3,y3 = 0,0\nx3_3,y3_3 = 5, 5\n\nrect_loop = True\ntest = False\n\n# def my_random(min_val, max_val):\n    # seed = int(time.time() * 1000000) % 10000\n    # random_number = (seed * 37) % (max_val - min_val + 1) + min_val\n    # return random_number\n\n# def my_random_full(min_val, max_val, count):\n    # if count > (max_val - min_val + 1):\n    #     raise ValueError(\"Not Enough unique numbers\")\n    # result = set()\n    # while len(result) < count:\n    #     result.add(my_random(min_val, max_val))\n    # return list(result)\n# print(my_random_full(1, 20, 1))\ndef create_rect():\n    global x1, y1, x2, y2, x3, y3, test, rect_loop\n    while rect_loop:\n        x1 = random.randint(0, 128)\n        x2 = random.randint(0, 128)\n        x3 = random.randint(0, 128)\n        plus_y1 = random.randint(5, 8)\n        plus_y2 = random.randint(6, 10)\n        plus_y3 = random.randint(3, 6)\n        if x1 - x2 >= 20 and x2 - x3 >= 20 and x1 - x3 >= 20:\n            while True:\n                y1 += plus_y1\n                y2 += plus_y2\n                y3 += plus_y3\n                print(y1)\n                sleep(0.01)\n                if y1 >= 59 and y2 >= 59 and y3 >= 59:\n                    y1 = 0\n                    y2 = 0\n                    y3 = 0\n                    break\n\n_thread.start_new_thread(create_rect, ())\n\n\nwhile True:\n    sw1 = swone()\n    sw2 = swtwo()\n    oled.fill(0)\n    oled.rect(x_start, y_start, x_stop, y_stop, 1)\n    if x1 - x2 >= 20 and x2 - x3 >= 20 and x1 - x3 >= 20:\n        oled.fill_rect(x1, y1, x1_1, y1_1, 1)\n        oled.fill_rect(x2, y2, x2_2, y2_2, 1)\n        oled.rect(x3, y3, x3_3, y3_3, 1)\n    if y1_1 >= y_start and x1_1 >= x_start and x1_1 <= x_start + 10:\n        y1 = 0\n    elif y2_2 >= y_start and x2_2 >= x_start and x2_2 <= x_start + 10:\n        y2 = 0\n    elif y3_3 >= y_start and x3_3 >= x_start and x3_3 <= x_start + 10:\n        y3 = 0\n    oled.show()\n    if sw1 == 0 and x_start < 105:\n        x_start += 3\n    elif sw2 == 0 and x_start > 0:\n        x_start -= 3\n"}