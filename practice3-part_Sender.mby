{"config.json":"{\"mode\":\"code\",\"github\":null,\"board\":\"openbit\",\"level\":\"Beginner\"}","main.py":"import display\r\nimport ESPNOW as now\r\nimport OLED\r\nfrom machine import Pin\r\nfrom time import sleep\r\noled = OLED.SSD1306_I2C(128, 64)\r\nswa = Pin(2, Pin.IN)\r\nswb = Pin(15, Pin.IN)\r\nswone = Pin(5, Pin.IN)\r\nswtwo = Pin(12, Pin.IN)\r\nA_Point = 0\r\nB_Point = 0\r\nprint(now.getMyMAC())\r\ncheck = \"800\"\r\na = 0\r\n\r\n# 10:97:BD:21:2D:F0 is Sender\r\n\r\n# while True:\r\n#     swA = swa()\r\n#     swB = swb()\r\n#     sw1 = swone()\r\n#     sw2 = swtwo()\r\n#     display.show(\"T\")\r\n#     oled.fill(0)\r\n#     oled.text(\"A VS B\", 10, 0, 1)\r\n#     oled.text(\"A :\", 10, 20, 1)\r\n#     oled.text(str(A_Point), 35, 20, 1)\r\n#     oled.text(\"B :\", 10, 30, 1)\r\n#     oled.text(str(B_Point), 35, 30, 1)\r\n#     oled.show()\r\n#     if now.isReadyToRead():\r\n#         now.readAsText()\r\n#         checking = now.readAsText()\r\n#         print(checking)\r\n\r\n#         if checking == \"C\":\r\n#             A_Point = 0\r\n#             B_Point = 0\r\n#             oled.text(\"Clear\", 27, 50, 1)\r\n#             oled.show()\r\n#             sleep(0.3)\r\n\r\n#         if checking == \"AP\":\r\n#             A_Point += 1\r\n#             oled.text(\"TEAM A UP\", 27, 50, 1)\r\n#             oled.show()\r\n#             sleep(0.3)\r\n#         if checking == \"AD\":\r\n#             A_Point -= 1\r\n#             oled.text(\"TEAM A DOWN\", 20, 50, 1)\r\n#             oled.show()\r\n#             sleep(0.3)\r\n#         if A_Point < 0:\r\n#             A_Point = 99\r\n#         if A_Point > 99:\r\n#             A_Point = 0\r\n\r\n#     if swA == 0 and swB == 1:\r\n#         now.send(\"AP\", '8C:CE:4E:BB:4A:FC')\r\n#         sleep(0.3)\r\n#     if swB == 0 and swA == 1:\r\n#         now.send(\"AD\", '8C:CE:4E:BB:4A:FC')\r\n#         sleep(0.3)\r\n    \r\n#     while swA == 0 and swB == 0 and sw1 == 0 and sw2 == 0:\r\n#         swA = swa()\r\n#         swB = swb()\r\n#         sw1 = swone()\r\n#         sw2 = swtwo()\r\n#         now.send(check, '8C:CE:4E:BB:4A:FC')\r\n#         sleep(1)\r\n#         a += 1\r\n#         print(a)\r\n    \r\n#     if sw1 == 0 and sw2 == 0 and swA == 1 and swB == 1:\r\n#         now.send(\"C\", '8C:CE:4E:BB:4A:FC')\r\n#         sleep(0.3)\r\n\r\n\r\ndef show_score():\r\n    oled.fill(0)\r\n    oled.text(\"A VS B\", 10, 0, 1)\r\n    oled.text(\"A :\", 10, 20, 1)\r\n    oled.text(str(A_Point), 35, 20, 1)\r\n    oled.text(\"B :\", 10, 30, 1)\r\n    oled.text(str(B_Point), 35, 30, 1)\r\n    oled.show()\r\n\r\ndef reset_score():\r\n    global A_Point, B_Point\r\n    A_Point = 0\r\n    B_Point = 0\r\n    oled.text(\"Clear\", 27, 50, 1)\r\n    oled.show()\r\n    sleep(0.3)\r\n\r\ndef update_score(team, operation):\r\n    global A_Point, B_Point\r\n    if team == \"A\":\r\n        if operation == \"UP\":\r\n            A_Point += 1\r\n            oled.text(\"TEAM A UP\", 27, 50, 1)\r\n        elif operation == \"DOWN\":\r\n            A_Point -= 1\r\n            oled.text(\"TEAM A DOWN\", 20, 50, 1)\r\n        if A_Point < 0:\r\n            A_Point = 99\r\n        if A_Point > 99:\r\n            A_Point = 0\r\n    elif team == \"B\":\r\n        if operation == \"UP\":\r\n            B_Point += 1\r\n            oled.text(\"TEAM B UP\", 27, 50, 1)\r\n        elif operation == \"DOWN\":\r\n            B_Point -= 1\r\n            oled.text(\"TEAM B DOWN\", 20, 50, 1)\r\n        if B_Point < 0:\r\n            B_Point = 99\r\n        if B_Point > 99:\r\n            B_Point = 0\r\n    oled.show()\r\n    sleep(0.3)\r\n\r\ndef send_command(command):\r\n    now.send(command, '8C:CE:4E:BB:4A:FC')\r\n    sleep(0.3)\r\n\r\ndef handle_input():\r\n    global a\r\n    swA = swa()\r\n    swB = swb()\r\n    sw1 = swone()\r\n    sw2 = swtwo()\r\n\r\n    # Check for ESPNOW input\r\n    if now.isReadyToRead():\r\n        checking = now.readAsText()\r\n        if checking == \"C\":\r\n            reset_score()\r\n        elif checking == \"AP\":\r\n            update_score(\"A\", \"UP\")\r\n        elif checking == \"AD\":\r\n            update_score(\"A\", \"DOWN\")\r\n        elif checking == \"BP\":\r\n            update_score(\"B\", \"UP\")\r\n        elif checking == \"BD\":\r\n            update_score(\"B\", \"DOWN\")\r\n\r\n    # Switch-based commands\r\n    if swA == 0 and swB == 1:\r\n        send_command(\"AP\")\r\n    elif swB == 0 and swA == 1:\r\n        send_command(\"AD\")\r\n    elif sw1 == 0 and sw2 == 1:\r\n        send_command(\"BP\")\r\n    elif sw2 ==  0 and sw1 == 1:\r\n        send_command(\"BD\")\r\n    while swA == 0 and swB == 0 and sw1 == 0 and sw2 == 0:\r\n        swA = swa()\r\n        swB = swb()\r\n        sw1 = swone()\r\n        sw2 = swtwo()\r\n        send_command(check)\r\n        sleep(1)\r\n\r\n    # Clear command when only sw1 and sw2 are pressed\r\n    if sw1 == 0 and sw2 == 0 and swA == 1 and swB == 1:\r\n        send_command(\"C\")\r\n\r\nwhile True:\r\n    display.show(\"T\")\r\n    show_score()\r\n    handle_input()\r\n    "}