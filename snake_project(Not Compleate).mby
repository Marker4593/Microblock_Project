{"config.json":"{\"mode\":\"code\",\"github\":null,\"board\":\"openbit\",\"level\":\"Beginner\"}","main.py":"from machine import Pin\r\nfrom time import sleep\r\nfrom neopixel import NeoPixel\r\nimport display\r\n\r\nnp = NeoPixel(Pin(13, Pin.OUT), 24)\r\n\r\ndots= {\r\n    1: {\"x\": 0, \"y\": 0},\r\n    2: {\"x\": 0, \"y\": 1},\r\n    3: {\"x\": 0, \"y\": 2}\r\n}\r\ndef dot_plus(num, position):\r\n    if num not in dots:\r\n        print(f\"Dot {num} does not exist!\")\r\n        return\r\n\r\n    display.dot(dots[num][\"x\"], dots[num][\"y\"], (0, 0, 0))\r\n    \r\n    dots[num][position] += 1\r\n    \r\n    display.dot(dots[num][\"x\"], dots[num][\"y\"], display.hex2byte('#ff0000'))\r\n    sleep(0.03)\r\n\r\ndef dot_del(num, position):\r\n    if num not in dots:\r\n        print(f\"Dot {num} does not exist!\")\r\n        return\r\n\r\n    display.dot(dots[num][\"x\"], dots[num][\"y\"], (0, 0, 0))\r\n    \r\n    dots[num][position] -= 1\r\n    \r\n    display.dot(dots[num][\"x\"], dots[num][\"y\"], display.hex2byte('#ff0000'))\r\n    sleep(0.03)\r\n    \r\ndef snake_start():\r\n    \r\n    display.dot(0, 0, display.hex2byte('#ff0000'))\r\n    display.dot(0, 1, display.hex2byte('#ff0000'))\r\n    display.dot(0, 2, display.hex2byte('#ff0000'))\r\n\r\n    for _ in range(2):\r\n        # Pattern 1\r\n        # 2 Process\r\n        dot_plus(3, \"y\")\r\n        dot_plus(2, \"y\")\r\n        dot_plus(1, \"y\")\r\n        \r\n        \r\n    #---------------------------------------------------------------\r\n    # Pattern 2\r\n    dot_plus(3, \"x\")\r\n    dot_plus(2, \"y\")\r\n    dot_plus(1, \"y\")\r\n    dot_plus(3, \"x\")\r\n    dot_plus(2, \"x\")\r\n    dot_plus(1, \"y\")\r\n    #--------------------------------------------------------\r\n    for _ in range(2):\r\n        # Pattern 3\r\n        # 2 Process\r\n    \r\n        dot_plus(3, \"x\")\r\n        dot_plus(2, \"x\")\r\n        dot_plus(1, \"x\")\r\n    #-------------------------------------------------------\r\n    # Pattern 4\r\n    \r\n    dot_del(3, \"y\")\r\n    dot_plus(2, \"x\")\r\n    dot_plus(1, \"x\")\r\n    dot_del(3, \"y\")\r\n    dot_del(2, \"y\")\r\n    dot_plus(1, \"x\")\r\n    \r\n    #----------------------------------------------------------\r\n    for _ in range(2):\r\n        # Pattern 5\r\n        # 2 Process\r\n        dot_del(3, \"y\")\r\n        dot_del(2, \"y\")\r\n        dot_del(1, \"y\")\r\n    \r\n    #---------------------------------------------------------\r\n    # Pattern 6\r\n    dot_del(3, \"x\")\r\n    dot_del(2, \"y\")\r\n    dot_del(1, \"y\")\r\n    dot_del(3, \"x\")\r\n    dot_del(2, \"x\")\r\n    dot_del(1, \"y\")\r\n    \r\n    #-------------------------------------------------------\r\n    for _ in range(2):\r\n        # Pattern 7\r\n        # 2 Process\r\n        dot_del(3, \"x\")\r\n        dot_del(2, \"x\")\r\n        dot_del(1, \"x\")\r\n    \r\n    #--------------------------------------------------------\r\n    # Pattern 8\r\n    dot_plus(3, \"y\")\r\n    dot_del(2, \"x\")\r\n    dot_del(1, \"x\")\r\n    dot_plus(3, \"y\")\r\n    dot_plus(2, \"y\")\r\n    dot_del(1, \"x\")\r\n    \r\nwhile True:\r\n    snake_start()   \r\n    #display.dot(2, 2, display.hex2byte('#7FFF00'))\r\n\r\n\r\n\r\n    \r\n\r\n\r\n\r\n"}